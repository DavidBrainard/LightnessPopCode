function argList = SetupConditionArgs(conditionName)
%
%
% Condtion strings
%   'basic' - The basic defaults we use for decoding
%
% 4/21/16  dhb  Wrote it so we can keep it consistent across callers

switch (conditionName)
    case 'basic'
        argList = { ...
            'dataType','spksrt', ...
            'type','aff', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'basicpaint'
        argList = { ...
            'dataType','spksrt', ...
            'type','aff', ...
            'decodeJoint','paint', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'basicshadow'
         argList = { ...
            'dataType','spksrt', ...
            'type','aff', ...
            'decodeJoint','shadow', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'basic_shuff'
        argList = { ...
            'dataType','spksrt', ...
            'type','aff', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','intshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'fitrlinear'
        argList = { ...
            'dataType','spksrt', ...
            'type','fitrlinear', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'fitrcvlasso'
        argList = { ...
            'dataType','spksrt', ...
            'type','fitrcvlasso', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'fitrcvridge'
        argList = { ...
            'dataType','spksrt', ...
            'type','fitrcvridge', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'basic_ml'
        argList = { ...
            'dataType','spksrt', ...
            'type','maxlikely', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
   
    case 'lassoglm1' 
        argList = { ...
            'dataType','spksrt', ...
            'type','lassoglm1', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    case 'poiss_ml'
        argList = { ...
            'dataType','spksrt', ...
            'type','maxlikelypoiss', ...
            'decodeJoint','both', ...
            'classifyType','mvma', ...
            'rfAnalysisType','no', ...
            'pcaType','no', ...
            'trialShuffleType','notshf', ...
            'paintShadowShuffleType','nopsshf', ...
            'decodeIntensityFitType','betacdf', ...
            'paintCondition', 1, ...
            'shadowCondition', 2, ...
            'paintShadowFitType', 'gain',  ...
            'excludeSYelectrodes','sykp', ...
            'minTrials',5, ...
            'filterMaxRMSE',0.20, ...
            'envelopeThreshold',1.05, ...
            };
        
    otherwise
        error('Unknown condition name provided');
end